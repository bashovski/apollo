swagger: "2.0"
info:
  description: "API Documentation for Apollo"
  version: "Alpha"
  title: "Apollo"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1:8000"
basePath: "/api"
tags:
- name: "User"
  description: "Documentation for users API"
schemes:
- "http"
paths:
  /login:
    post:
      tags:
        - "User"
      summary: "Login a user and gather user access token"
      description: ""
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "User Data"
        schema:
          $ref: "#/definitions/UserLogin"
      responses:
        201:
          description: "Success. User logged in"
        422:
          description: "Validation Error"
        429:
          description: "Too many requests"
        401:
          description: "Unauthorized"
  /user:
    get:
      tags:
        - "User"
      summary: "Using authorization key, gather authorized user data model"
      description: ""
      operationId: "authorize"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "header"
        name: "Authorization"
        type: "string"
        required: true
      responses:
        200:
          description: "Success. Authorized."
        429:
          description: "Too many requests"
        302:
          description: "Authorization failed"
  /validateregister:
    get:
      tags:
      - "User"
      summary: "Validate a user input for register"
      description: ""
      operationId: "validateUserRegister"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "type"
        enum: ["email", "password", "birthloc"]
        type: "string"
        required: true

      - in: "query"
        name: "email"
        type: "string"
        required: true

      - in: "query"
        name: "firstName"
        type: "string"
        required: true

      - in: "query"
        name: "lastName"
        type: "string"
        required: true

      - in: "query"
        name: "password"
        type: "string"
        required: true

      - in: "query"
        name: "password_confirmation"
        type: "string"
        required: true

      - in: "query"
        name: "birthDay"
        type: "integer"
        required: true

      - in: "query"
        name: "birthMonth"
        type: "integer"
        required: true

      - in: "query"
        name: "birthYear"
        type: "integer"
        required: true

      - in: "query"
        name: "location"
        type: "string"
        required: true

      responses:
        500:
          description: "Internal"
        200:
          description: "Success"
  /validate:
    get:
      tags:
      -  "User"
      summary: "Validate a user input for login"
      description: ""
      operationId: "validateUserInput"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "query"
        name: "type"
        enum: ["email", "final"]
        type: "string"
        required: true

      - in: "query"
        name: "email"
        type: "string"
        required: true

      - in: "query"
        name: "password"
        type: "string"
        required: true
      responses:
        500:
          description: "Internal"
        200:
          description: "Success"
  /validateuserupdate:
    get:
      tags:
      -  "User"
      summary: "Validate and update user settings"
      description: ""
      operationId: "validateUserUpdate"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:

      - in: "query"
        name: "email"
        type: "string"
        required: true

      - in: "query"
        name: "password"
        type: "string"
        required: true

      - in: "query"
        name: "password_confirmation"
        type: "string"
        required: true

      - in: "query"
        name: "dateOfBirth"
        type: "string"
        required: true

      - in: "query"
        name: "location"
        type: "string"
        required: true

      - in: "query"
        name: "postalCode"
        type: "string"
        required: true

      - in: "query"
        name: "accessProfilePermission"
        enum: ["everyone", "onlyRegistered", "onlyAgent", "onlyMe"]
        type: "string"
        required: true

      - in: "query"
        name: "language"
        enum: ["English", "bosanski", "Nederlands"]
        type: "string"
        required: true

      responses:
        500:
          description: "Internal"
        200:
          description: "Success"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                enum: [true, false]
              errors:
                type: "object"
              inserted:
                type: "object"
definitions:
  UserLogin:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
